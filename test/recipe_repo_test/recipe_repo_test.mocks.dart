// Mocks generated by Mockito 5.4.2 from annotations
// in tech_task/test/recipe_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tech_task/core/api/api.dart' as _i5;
import 'package:tech_task/core/repositories/recipe_repo.dart' as _i3;
import 'package:tech_task/core/result/result.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E> extends _i1.SmartFake implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RecipeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeRepository extends _i1.Mock implements _i3.RecipeRepository {
  MockRecipeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i5.IngredientModel>, _i5.RequestFailure>>
      getIngredients() => (super.noSuchMethod(
            Invocation.method(
              #getIngredients,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Result<List<_i5.IngredientModel>,
                        _i5.RequestFailure>>.value(
                _FakeResult_0<List<_i5.IngredientModel>, _i5.RequestFailure>(
              this,
              Invocation.method(
                #getIngredients,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Result<List<_i5.IngredientModel>, _i5.RequestFailure>>);
  @override
  _i4.Future<_i2.Result<List<_i5.Recipiemodel>, _i5.RequestFailure>>
      getRecipies({required List<String>? selectedIngredients}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getRecipies,
              [],
              {#selectedIngredients: selectedIngredients},
            ),
            returnValue: _i4.Future<
                    _i2
                    .Result<List<_i5.Recipiemodel>, _i5.RequestFailure>>.value(
                _FakeResult_0<List<_i5.Recipiemodel>, _i5.RequestFailure>(
              this,
              Invocation.method(
                #getRecipies,
                [],
                {#selectedIngredients: selectedIngredients},
              ),
            )),
          ) as _i4
              .Future<_i2.Result<List<_i5.Recipiemodel>, _i5.RequestFailure>>);
}
